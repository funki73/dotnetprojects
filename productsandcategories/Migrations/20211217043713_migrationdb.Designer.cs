// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using productsandcategories.Model;

namespace productsandcategories.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211217043713_migrationdb")]
    partial class migrationdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("productsandcategories.Model.Associations", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CatwithProdCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdwithCatProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AssociationId");

                    b.HasIndex("CatwithProdCategoryId");

                    b.HasIndex("ProdwithCatProductId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("productsandcategories.Model.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("productsandcategories.Model.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("productsandcategories.Model.Associations", b =>
                {
                    b.HasOne("productsandcategories.Model.Categories", "CatwithProd")
                        .WithMany("AssignedProducts")
                        .HasForeignKey("CatwithProdCategoryId");

                    b.HasOne("productsandcategories.Model.Products", "ProdwithCat")
                        .WithMany("AssignedCategories")
                        .HasForeignKey("ProdwithCatProductId");
                });

            modelBuilder.Entity("productsandcategories.Model.Categories", b =>
                {
                    b.HasOne("productsandcategories.Model.Products", null)
                        .WithMany("AllCategories")
                        .HasForeignKey("ProductsProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
